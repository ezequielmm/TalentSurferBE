// <auto-generated />
using System;
using EY.TalentSurfer.Support.Persistence.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EY.TalentSurfer.Support.Persistence.Sql.Migrations
{
    [DbContext(typeof(TalentSurferContext))]
    [Migration("20191022184020_OpportunityModel")]
    partial class OpportunityModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EY.TalentSurfer.Domain.Certainty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<int>("SortOrder");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Certainty");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 353, DateTimeKind.Unspecified).AddTicks(4962), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "1. Lost",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 1,
                            Value = "0%"
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 353, DateTimeKind.Unspecified).AddTicks(5006), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "2. Forecast",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 2,
                            Value = "20%"
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 353, DateTimeKind.Unspecified).AddTicks(5012), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "3. Under Discussion",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 3,
                            Value = "40%"
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 353, DateTimeKind.Unspecified).AddTicks(5017), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "4. Proposal Sent",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 4,
                            Value = "60%"
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 353, DateTimeKind.Unspecified).AddTicks(5115), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "5. SOW Sent",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 5,
                            Value = "80%"
                        },
                        new
                        {
                            Id = 6,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 353, DateTimeKind.Unspecified).AddTicks(5120), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "6. SOW Approved",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 6,
                            Value = "100%"
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(4571), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5820), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere LATAM",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5836), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere INDIA",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5841), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "US",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5844), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere ARG",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 6,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5848), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere CO",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 7,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5851), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Pune",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 7
                        },
                        new
                        {
                            Id = 8,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5855), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Bangalore",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 8
                        },
                        new
                        {
                            Id = 9,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5858), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "CABA",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 9
                        },
                        new
                        {
                            Id = 10,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5861), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "CBA",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 11,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5865), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "RO",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 11
                        },
                        new
                        {
                            Id = 12,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5868), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "MDZ",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 12
                        },
                        new
                        {
                            Id = 13,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5872), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Bogota",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 13
                        },
                        new
                        {
                            Id = 14,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 346, DateTimeKind.Unspecified).AddTicks(5875), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Medellin",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 14
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Opportunity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CertaintyId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("MapId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<string>("Name");

                    b.Property<string>("OriginalOpptCopy");

                    b.Property<string>("Owner");

                    b.Property<int?>("PrimaryLocationId");

                    b.Property<string>("Product");

                    b.Property<string>("ProjectName");

                    b.Property<string>("ProposalFolder");

                    b.Property<string>("RequestedByEmail");

                    b.Property<string>("RequestedByName");

                    b.Property<DateTime>("RequestedOn");

                    b.Property<int?>("ServiceLineId");

                    b.Property<int>("Sow");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("CertaintyId");

                    b.HasIndex("MapId");

                    b.HasIndex("PrimaryLocationId");

                    b.HasIndex("ServiceLineId");

                    b.HasIndex("StatusId");

                    b.ToTable("Opportunity");
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.OpportunityLocation", b =>
                {
                    b.Property<int>("OpportunityId");

                    b.Property<int>("LocationId");

                    b.HasKey("OpportunityId", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("OpportunityLocation");
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8735), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "** Not Needed **",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8762), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = ".Net Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8766), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "BI Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8769), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "BPM Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8772), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Business Analyst",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 6,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8776), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Business Intelligence",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 7,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8779), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Data Architect",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 7
                        },
                        new
                        {
                            Id = 8,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8781), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Data Scientist",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 8
                        },
                        new
                        {
                            Id = 9,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8784), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "DBA",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 9
                        },
                        new
                        {
                            Id = 10,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8787), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "DevOps/Cloud Engineer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 11,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8790), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Java Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 11
                        },
                        new
                        {
                            Id = 12,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8793), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Mobile Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 12
                        },
                        new
                        {
                            Id = 13,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8796), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Performance Test Engineer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 13
                        },
                        new
                        {
                            Id = 14,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8799), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Project Manager",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 14
                        },
                        new
                        {
                            Id = 15,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8802), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Python Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 15
                        },
                        new
                        {
                            Id = 16,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8845), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "QC Analyst",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 16
                        },
                        new
                        {
                            Id = 17,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8848), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Salesforce Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 17
                        },
                        new
                        {
                            Id = 18,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8851), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Scrum Master",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 18
                        },
                        new
                        {
                            Id = 19,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8854), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Service Now Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 19
                        },
                        new
                        {
                            Id = 20,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8857), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Sharepoint Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 21,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8860), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SOA Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 21
                        },
                        new
                        {
                            Id = 22,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8863), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SQL Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 22
                        },
                        new
                        {
                            Id = 23,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8866), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Test Automation Engineer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 23
                        },
                        new
                        {
                            Id = 24,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8869), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Tech Manager",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 24
                        },
                        new
                        {
                            Id = 25,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8872), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SME",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 25
                        },
                        new
                        {
                            Id = 26,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8874), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "User Experience Designer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 26
                        },
                        new
                        {
                            Id = 27,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8878), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Visual Designer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 27
                        },
                        new
                        {
                            Id = 28,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 348, DateTimeKind.Unspecified).AddTicks(8881), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Web UI Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 28
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.PositionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("PositionStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 352, DateTimeKind.Unspecified).AddTicks(1661), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "** Not Needed **",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 352, DateTimeKind.Unspecified).AddTicks(1690), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "1. No Candidates",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 352, DateTimeKind.Unspecified).AddTicks(1694), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "2. Internal FIT",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 352, DateTimeKind.Unspecified).AddTicks(1698), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "3. Canfirmed (NOW)",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 352, DateTimeKind.Unspecified).AddTicks(1701), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "4. Confirmed (Future)",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 5
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Seniority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("Seniority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3868), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "** Not Needed **",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3894), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Trainee",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3898), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Junior",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3902), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Junior Adv",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3905), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SSr",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 6,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3908), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SSr Adv",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 7,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3911), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Senior",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 7
                        },
                        new
                        {
                            Id = 8,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3914), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SD / Level 2",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 8
                        },
                        new
                        {
                            Id = 9,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3917), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Architect / Level 3",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 9
                        },
                        new
                        {
                            Id = 10,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3921), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Level 4",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 12,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 351, DateTimeKind.Unspecified).AddTicks(3924), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Level 5",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 12
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.ServiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("ServiceLine");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 350, DateTimeKind.Unspecified).AddTicks(2594), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Platform",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 350, DateTimeKind.Unspecified).AddTicks(2618), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "ATTG",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 350, DateTimeKind.Unspecified).AddTicks(2622), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "GTP",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 350, DateTimeKind.Unspecified).AddTicks(2626), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Business",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 4
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 349, DateTimeKind.Unspecified).AddTicks(5918), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "1. Wating for Feedback",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 349, DateTimeKind.Unspecified).AddTicks(6044), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "2. On Hold",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 349, DateTimeKind.Unspecified).AddTicks(6048), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "3. Lost",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 22, 18, 40, 20, 349, DateTimeKind.Unspecified).AddTicks(6052), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "4. Won",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SortOrder = 4
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Opportunity", b =>
                {
                    b.HasOne("EY.TalentSurfer.Domain.Certainty", "Certainty")
                        .WithMany()
                        .HasForeignKey("CertaintyId");

                    b.HasOne("EY.TalentSurfer.Domain.Opportunity", "Map")
                        .WithMany()
                        .HasForeignKey("MapId");

                    b.HasOne("EY.TalentSurfer.Domain.Location", "PrimaryLocation")
                        .WithMany()
                        .HasForeignKey("PrimaryLocationId");

                    b.HasOne("EY.TalentSurfer.Domain.ServiceLine", "ServiceLine")
                        .WithMany()
                        .HasForeignKey("ServiceLineId");

                    b.HasOne("EY.TalentSurfer.Domain.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.OpportunityLocation", b =>
                {
                    b.HasOne("EY.TalentSurfer.Domain.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EY.TalentSurfer.Domain.Opportunity", "Opportunity")
                        .WithMany("AdditionalOpportunityLocations")
                        .HasForeignKey("OpportunityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
