// <auto-generated />
using System;
using EY.TalentSurfer.Support.Persistence.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EY.TalentSurfer.Support.Persistence.Sql.Migrations
{
    [DbContext(typeof(TalentSurferContext))]
    [Migration("20191029183911_SowModel")]
    partial class SowModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EY.TalentSurfer.Domain.Certainty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Certainty");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 148, DateTimeKind.Unspecified).AddTicks(8573), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "1. Lost",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = "0%"
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 148, DateTimeKind.Unspecified).AddTicks(8614), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "2. Forecast",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = "20%"
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 148, DateTimeKind.Unspecified).AddTicks(8621), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "3. Under Discussion",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = "40%"
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 148, DateTimeKind.Unspecified).AddTicks(8627), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "4. Proposal Sent",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = "60%"
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 148, DateTimeKind.Unspecified).AddTicks(8632), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "5. SOW Sent",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = "80%"
                        },
                        new
                        {
                            Id = 6,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 148, DateTimeKind.Unspecified).AddTicks(8637), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "6. SOW Approved",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = "100%"
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.HasKey("Id");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(1285), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2278), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere LATAM",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2293), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere INDIA",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2297), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "US",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2301), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere ARG",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2304), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anywhere CO",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2307), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Pune",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2310), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Bangalore",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2313), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "CABA",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2315), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "CBA",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 11,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2320), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "RO",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 12,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2323), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "MDZ",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 13,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2326), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Bogota",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 14,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 141, DateTimeKind.Unspecified).AddTicks(2329), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Medellin",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Opportunity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CertaintyId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("MapId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<string>("Name");

                    b.Property<string>("OriginalOpptCopy");

                    b.Property<string>("Owner");

                    b.Property<int?>("PrimaryLocationId");

                    b.Property<string>("Product");

                    b.Property<string>("ProjectName");

                    b.Property<string>("ProposalFolder");

                    b.Property<string>("RequestedByEmail");

                    b.Property<string>("RequestedByName");

                    b.Property<DateTime>("RequestedOn");

                    b.Property<int?>("ServiceLineId");

                    b.Property<int>("Sow");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("CertaintyId");

                    b.HasIndex("MapId");

                    b.HasIndex("PrimaryLocationId");

                    b.HasIndex("ServiceLineId");

                    b.HasIndex("StatusId");

                    b.ToTable("Opportunity");
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.OpportunityLocation", b =>
                {
                    b.Property<int>("OpportunityId");

                    b.Property<int>("LocationId");

                    b.HasKey("OpportunityId", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("OpportunityLocation");
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.HasKey("Id");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3442), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "** Not Needed **",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3466), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = ".Net Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3514), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "BI Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3518), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "BPM Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3520), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Business Analyst",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3523), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Business Intelligence",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3526), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Data Architect",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3529), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Data Scientist",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3531), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "DBA",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3534), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "DevOps/Cloud Engineer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 11,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3537), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Java Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 12,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3540), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Mobile Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 13,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3542), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Performance Test Engineer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 14,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3545), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Project Manager",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 15,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3548), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Python Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 16,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3550), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "QC Analyst",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 17,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3553), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Salesforce Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 18,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3556), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Scrum Master",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 19,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3559), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Service Now Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 20,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3561), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Sharepoint Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 21,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3564), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SOA Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 22,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3567), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SQL Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 23,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3570), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Test Automation Engineer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 24,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3572), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Tech Manager",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 25,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3575), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SME",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 26,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3578), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "User Experience Designer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 27,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3580), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Visual Designer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 28,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(3583), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Web UI Developer",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.PositionEY", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PositionEY");
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.PositionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.HasKey("Id");

                    b.ToTable("PositionStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 147, DateTimeKind.Unspecified).AddTicks(3538), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "** Not Needed **",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 147, DateTimeKind.Unspecified).AddTicks(3582), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "1. No Candidates",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 147, DateTimeKind.Unspecified).AddTicks(3589), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "2. Internal FIT",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 147, DateTimeKind.Unspecified).AddTicks(3594), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "3. Canfirmed (NOW)",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 147, DateTimeKind.Unspecified).AddTicks(3598), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "4. Confirmed (Future)",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Seniority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.HasKey("Id");

                    b.ToTable("Seniority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1518), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "** Not Needed **",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1553), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Trainee",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1563), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Junior",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1567), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Junior Adv",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1572), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SSr",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1577), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SSr Adv",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1582), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Senior",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1587), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "SD / Level 2",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1591), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Architect / Level 3",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1596), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Level 4",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 12,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 146, DateTimeKind.Unspecified).AddTicks(1601), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Level 5",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.ServiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.HasKey("Id");

                    b.ToTable("ServiceLine");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 144, DateTimeKind.Unspecified).AddTicks(7063), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Platform",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 144, DateTimeKind.Unspecified).AddTicks(7093), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "ATTG",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 144, DateTimeKind.Unspecified).AddTicks(7099), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "GTP",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 144, DateTimeKind.Unspecified).AddTicks(7104), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Business",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Sow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Sow");
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArchivingFlag");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(9505), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "1. Wating for Feedback",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(9525), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "2. On Hold",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(9529), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "3. Lost",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            ArchivingFlag = false,
                            CreatedBy = "Initial Data Load",
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 10, 29, 18, 39, 11, 143, DateTimeKind.Unspecified).AddTicks(9532), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "4. Won",
                            ModifiedOn = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.Opportunity", b =>
                {
                    b.HasOne("EY.TalentSurfer.Domain.Certainty", "Certainty")
                        .WithMany()
                        .HasForeignKey("CertaintyId");

                    b.HasOne("EY.TalentSurfer.Domain.Opportunity", "Map")
                        .WithMany()
                        .HasForeignKey("MapId");

                    b.HasOne("EY.TalentSurfer.Domain.Location", "PrimaryLocation")
                        .WithMany()
                        .HasForeignKey("PrimaryLocationId");

                    b.HasOne("EY.TalentSurfer.Domain.ServiceLine", "ServiceLine")
                        .WithMany()
                        .HasForeignKey("ServiceLineId");

                    b.HasOne("EY.TalentSurfer.Domain.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("EY.TalentSurfer.Domain.OpportunityLocation", b =>
                {
                    b.HasOne("EY.TalentSurfer.Domain.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EY.TalentSurfer.Domain.Opportunity", "Opportunity")
                        .WithMany("AdditionalOpportunityLocations")
                        .HasForeignKey("OpportunityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
